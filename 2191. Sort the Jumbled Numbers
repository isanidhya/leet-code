import java.util.*;

public class Solution {
    public int[] sortJumbled(int[] mapping, int[] nums) {
        // Create a list of the original numbers
        List<Integer> numList = new ArrayList<>();
        for (int num : nums) {
            numList.add(num);
        }

        // Custom comparator to sort based on mapped values
        numList.sort((a, b) -> {
            int mappedA = getMappedValue(a, mapping);
            int mappedB = getMappedValue(b, mapping);
            if (mappedA != mappedB) {
                return Integer.compare(mappedA, mappedB);
            } else {
                return 0; // retain original order if mapped values are equal
            }
        });

        // Convert the sorted list back to an array
        for (int i = 0; i < nums.length; i++) {
            nums[i] = numList.get(i);
        }

        return nums;
    }

    private int getMappedValue(int num, int[] mapping) {
        StringBuilder mappedValue = new StringBuilder();
        for (char c : String.valueOf(num).toCharArray()) {
            mappedValue.append(mapping[c - '0']);
        }
        return Integer.parseInt(mappedValue.toString());
    }
}
